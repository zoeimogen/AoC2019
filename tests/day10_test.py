#!/usr/bin/python3
'''Advent of Code 2019 Day 8 tests'''
import unittest
import os
import sys
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
from aoc2019 import day10 # pylint: disable=wrong-import-position

class TestUM(unittest.TestCase):
    '''Tests from day seven'''
    def test_day10part1(self) -> None:
        '''Part one tests'''
        grid = ['.#..#',
                '.....',
                '#####',
                '....#',
                '...##']
        self.assertEqual(day10.find_best_asteroid(grid), (3, 4, 8))

        grid = ['......#.#.',
                '#..#.#....',
                '..#######.',
                '.#.#.###..',
                '.#..#.....',
                '..#....#.#',
                '#..#....#.',
                '.##.#..###',
                '##...#..#.',
                '.#....####']
        self.assertEqual(day10.find_best_asteroid(grid), (5, 8, 33))

        grid = ['#.#...#.#.',
                '.###....#.',
                '.#....#...',
                '##.#.#.#.#',
                '....#.#.#.',
                '.##..###.#',
                '..#...##..',
                '..##....##',
                '......#...',
                '.####.###.']
        self.assertEqual(day10.find_best_asteroid(grid), (1, 2, 35))

        grid = ['.#..#..###',
                '####.###.#',
                '....###.#.',
                '..###.##.#',
                '##.##.#.#.',
                '....###..#',
                '..#.#..#.#',
                '#..#.#.###',
                '.##...##.#',
                '.....#.#..']
        self.assertEqual(day10.find_best_asteroid(grid), (6, 3, 41))

        grid = ['.#..##.###...#######',
                '##.############..##.',
                '.#.######.########.#',
                '.###.#######.####.#.',
                '#####.##.#.##.###.##',
                '..#####..#.#########',
                '####################',
                '#.####....###.#.#.##',
                '##.#################',
                '#####.##.###..####..',
                '..######..##.#######',
                '####.##.####...##..#',
                '.#####..#.######.###',
                '##...#.##########...',
                '#.##########.#######',
                '.####.#.###.###.#.##',
                '....##.##.###..#####',
                '.#.#.###########.###',
                '#.#.#.#####.####.###',
                '###.##.####.##.#..##']
        self.assertEqual(day10.find_best_asteroid(grid), (11, 13, 210))

    def test_day10part2(self) -> None:
        '''Part two test'''
        grid = ['.#..##.###...#######',
                '##.############..##.',
                '.#.######.########.#',
                '.###.#######.####.#.',
                '#####.##.#.##.###.##',
                '..#####..#.#########',
                '####################',
                '#.####....###.#.#.##',
                '##.#################',
                '#####.##.###..####..',
                '..######..##.#######',
                '####.##.####...##..#',
                '.#####..#.######.###',
                '##...#.##########...',
                '#.##########.#######',
                '.####.#.###.###.#.##',
                '....##.##.###..#####',
                '.#.#.###########.###',
                '#.#.#.#####.####.###',
                '###.##.####.##.#..##']
        part1 = day10.find_best_asteroid(grid)
        grid_angles = day10.all_grid_angles(grid, part1)
        part2 = day10.destroy_asteroids(grid_angles)
        self.assertEqual(part2[199], (8, 2))
